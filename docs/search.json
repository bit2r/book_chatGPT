[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "데이터 사이언스",
    "section": "",
    "text": "서문\n한국 R 사용자회는 2022년 2월 28일에 설립되어 1년을 맞이하게 되었습니다. R 사용자회는 R Consortium R User Groups에 등록된 Seoul R Meetup을 운영하며 데이터 사이언스 R / Tidyverse 미트업을 매월 개최하고 있습니다. 또한, R 지식 나눔과 커뮤니티 멤버들 간의 사랑방 역할도 수행하고 있습니다.\n2022년부터는 오픈 통계 패키지(BitStat) 패키지를 개발하여 보급하였을 뿐만 아니라 BitNLP, BitSpatial, BitReport 패키지를 개발하여 공개하였습니다. 또한, “디지털 글쓰기”, “데이터 과학 프로그래밍”, “데이터 시각화”, “데이터 과학 기본기”, “오픈 통계 패키지”, “R 텍스트 마이닝”, “데이터 과학 언플러그드” 등의 전자책을 집필하여 무료로 대중에 공개하였습니다. 2023년은 교보정보통신 자회사 디플래닉스 후원을 받아 강남 교보타워에서 chatGPT와 데이터 과학을 주제로 매월 진행될 예정입니다.\n한국 R 사용자회는 AI와 함께 chatGPT 및 연관 AI 도구를 활용하여 데이터 문해력 향상과 디지털 불평등 해소를 위해 데이터 과학 전자책을 제작하여 공개하게 되었습니다.\n더 많은 정보는 아래 링크를 참고해주세요."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "curriculum.html#파이썬",
    "href": "curriculum.html#파이썬",
    "title": "chatGPT 커리큘럼",
    "section": "파이썬",
    "text": "파이썬\n\n\n\n\n\n\nDanger\n\n\n\n\n\n\n1주차: 데이터 과학 및 데이터 랭글링 소개\n\n데이터 과학의 개요와 다양한 분야에서 데이터 과학의 중요성 소개\n데이터 랭글링 및 정리의 기본 개념 소개\n데이터 필터링, 정렬, 병합 및 집계와 같은 데이터 랭글링(Wrangling) 기술\n데이터 랭글링을 위한 판다스(pandas)와 같은 Python 라이브러리 사용\n데이터 랭글링 기술을 연습할 수 있는 연습 및 프로젝트\n\n2주차 데이터 시각화 및 탐색적 데이터 분석(EDA)\n\n데이터 시각화에 대한 소개와 데이터 과학에서 데이터 시각화의 중요성\n다양한 유형의 시각화를 생성하기 위해 matplotlib, seaborn, plotly와 같은 Python 라이브러리 사용\n데이터 분포, 상관관계, 이상값 탐지 등 EDA의 원리 소개\n분산형 차트, 히스토그램, 박스 플롯 등 데이터 탐색을 위한 기술\n데이터 시각화 및 EDA 기술을 연습할 수 있는 연습 및 프로젝트\n\n3주차 통계 분석 및 머신 러닝 기초\n\n통계 분석 및 머신 러닝 소개\n확률 분포, 가설 테스트 및 회귀 분석과 같은 기본 통계 개념 개요\n지도 학습 및 비지도 학습과 같은 머신 러닝 알고리즘과 데이터 과학에 적용 소개\n머신 러닝 알고리즘 구현을 위한 scikit-learn과 같은 Python 라이브러리 사용\n통계 분석 및 머신 러닝 기초를 연습하는 연습 및 프로젝트\n\n4주차 고급 데이터 과학 기법\n\n딥러닝, 자연어 처리, 컴퓨터 비전과 같은 고급 데이터 과학 기법 소개\n신경망, 컨볼루션 신경망(CNN), 순환 신경망(RNN)과 같은 딥 러닝 개념 개요\n딥러닝 알고리즘 구현을 위한 Tensorflow 및 Keras와 같은 Python 라이브러리 사용\n감정 분석, 텍스트 분류, 명명된 개체 인식과 같은 자연어 처리 기술 소개\n이미지 분류, 객체 감지, 분할과 같은 컴퓨터 비전 기술 소개\n고급 데이터 과학 기법을 실습할 수 있는 연습 및 프로젝트"
  },
  {
    "objectID": "curriculum.html#r",
    "href": "curriculum.html#r",
    "title": "chatGPT 커리큘럼",
    "section": "R",
    "text": "R\n\n\n\n\n\n\nDanger\n\n\n\n\n\n\n1주차 1주차: R 및 데이터 랭글링 소개\n\nR 개요 및 데이터 과학에서의 중요성\nR에서 데이터 랭글링(Wrangling) 및 정리의 기본 개념 소개\ndplyr 및 tidyr 패키지를 사용하여 데이터 필터링, 정렬, 병합 및 집계와 같은 데이터 랭글링 기법 소개\n벡터, 행렬, 데이터 프레임 및 목록과 같은 R의 데이터 구조 소개\nR에서 데이터 랭글링 기술을 연습하는 연습 및 프로젝트\n\n2주차 데이터 시각화 및 탐색적 데이터 분석(EDA)\n\n데이터 시각화 소개 및 데이터 과학에서 데이터 시각화의 중요성\n다양한 유형의 시각화를 생성하기 위한 ggplot2 및 lattice와 같은 R 패키지 사용\n데이터 분포, 상관관계, 이상값 탐지 등 EDA의 원리 소개\n분산형 차트, 히스토그램, 상자그림과 같은 데이터 탐색 기법\nR에서 데이터 시각화 및 EDA 기술을 연습할 수 있는 연습 및 프로젝트\n\n3주차 통계 분석 및 기계 학습 기초\n\nR의 통계 분석 및 기계 학습 소개\n확률 분포, 가설 테스트 및 회귀 분석과 같은 기본 통계 개념 개요\n지도 학습 및 비지도 학습과 같은 기계 학습 알고리즘과 데이터 과학에서의 응용 프로그램 소개\n머신 러닝 알고리즘 구현을 위한 caret 및 mlr과 같은 R 패키지 사용\nR에서 통계 분석 및 기계 학습 기본 사항을 연습하는 연습 및 프로젝트\n\n4주차 고급 데이터 과학 기법\n\n텍스트 마이닝, 네트워크 분석, 시계열 분석과 같은 R의 고급 데이터 과학 기법 소개\ntm, 토픽모델 등 R 패키지를 활용한 감성 분석, 텍스트 분류, 토픽 모델링 등 텍스트 마이닝 개념 개요 소개\nigraph, statnet 등 R 패키지를 이용한 소셜 네트워크 분석, 중심성 측정, 커뮤니티 탐지 등 네트워크 분석 기법 소개\n예측, tseries 등 R 패키지를 활용한 ARIMA 모델, 예측, 추세 분석 등 시계열 분석 기법 소개\nR의 고급 데이터 과학 기법을 실습할 수 있는 실습 및 프로젝트."
  },
  {
    "objectID": "curriculum.html#수정된-커리큘럼",
    "href": "curriculum.html#수정된-커리큘럼",
    "title": "chatGPT 커리큘럼",
    "section": "수정된 커리큘럼",
    "text": "수정된 커리큘럼\n\n\n\n\n\n\nNote\n\n\n\n\n\n\n1주차 1주차: R 및 데이터 랭글링 소개\n\nR 개요 및 데이터 과학에서의 중요성\nR에서 데이터 랭글링(Wrangling) 및 정리의 기본 개념 소개\ndplyr 및 tidyr 패키지를 사용하여 데이터 필터링, 정렬, 병합 및 집계와 같은 데이터 랭글링 기법 소개\npivot_longer(), pivot_wider() 함수 사용 깔끔한 데이터 변형 \n벡터, 행렬, 데이터 프레임 및 목록과 같은 R의 데이터 구조 소개\nR에서 데이터 랭글링 기술을 연습하는 연습 및 프로젝트\n\n2주차 데이터 시각화 및 탐색적 데이터 분석(EDA)\n\n데이터 시각화 소개 및 데이터 과학에서 데이터 시각화의 중요성\n다양한 유형의 시각화를 생성하기 위한 ggplot2, gt R 패키지 사용\n데이터 분포, 상관관계, 이상값 탐지 등 EDA의 원리 소개\n분산형 차트, 히스토그램, 상자그림과 같은 데이터 탐색 기법\nR에서 데이터 시각화 및 EDA 기술을 연습할 수 있는 연습 및 프로젝트\n\n3주차 통계 분석 및 기계 학습 기초\n\nR의 통계 분석 및 기계 학습 소개\n확률 분포, 가설 테스트 및 회귀 분석과 같은 기본 통계 개념 개요\n지도 학습 및 비지도 학습과 같은 기계 학습 알고리즘과 데이터 과학에서의 응용 프로그램 소개\n머신 러닝 알고리즘 구현을 위한 tidymodels 및 mlr과 같은 R 패키지 사용\nR에서 통계 분석 및 기계 학습 기본 사항을 연습하는 연습 및 프로젝트\n\n4주차 고급 데이터 과학 기법\n\n텍스트 마이닝, 네트워크 분석, 시계열 분석과 같은 R의 고급 데이터 과학 기법 소개\ntidytext, 토픽모델 등 R 패키지를 활용한 감성 분석, 텍스트 분류, 토픽 모델링 등 텍스트 마이닝 개념 개요 소개\ntidygraph 등 R 패키지를 이용한 소셜 네트워크 분석, 중심성 측정, 커뮤니티 탐지 등 네트워크 분석 기법 소개\n예측, tidyverts 등 R 패키지를 활용한 ARIMA 모델, 예측, 추세 분석 등 시계열 분석 기법 소개\nR의 고급 데이터 과학 기법을 실습할 수 있는 실습 및 프로젝트."
  },
  {
    "objectID": "curriculum.html#작업흐름",
    "href": "curriculum.html#작업흐름",
    "title": "chatGPT 커리큘럼",
    "section": "작업흐름",
    "text": "작업흐름\nchatGPT 각장의 절을 작성하여 deepl에서 교정 후 quarto book으로 출판한다.\n\n\n\n\n\n\nchatGPT 작성\n\n\n\n\n\nDeepL 번역 및 교정\n\n\n\n\n\n쿼토 출판저작\n\n\n\nFigure 1: chatGPT 디지털 글쓰기 저작 흐름"
  },
  {
    "objectID": "intro.html#데이터-과학-및-데이터-랭글링-소개",
    "href": "intro.html#데이터-과학-및-데이터-랭글링-소개",
    "title": "1  R 및 데이터 랭글링 소개",
    "section": "1.1 데이터 과학 및 데이터 랭글링 소개",
    "text": "1.1 데이터 과학 및 데이터 랭글링 소개\nR은 통계 컴퓨팅 및 그래픽을 위한 프로그래밍 언어이자 소프트웨어 환경입니다. 1990년대 초 뉴질랜드 오클랜드 대학교의 로스 이하카(Ross Ihaka)와 로버트 젠틀맨(Robert Gentleman)에 의해 개발되었습니다. 그 이후로 데이터 분석, 시각화 및 통계 모델링에 가장 널리 사용되는 언어 중 하나가 되었습니다. R은 오픈 소스이므로 누구나 자유롭게 사용할 수 있고 수정할 수 있습니다.\nR에는 데이터 과학에 이상적인 여러 가지 기능이 있습니다. 예를 들어, 데이터 분석, 시각화 및 모델링을 위한 패키지 개발에 기여하는 대규모의 활발한 사용자 커뮤니티가 있습니다. 이러한 패키지는 CRAN(종합 R 아카이브 네트워크)에서 다운로드할 수 있으며 기계 학습, 시계열 분석, 데이터 시각화 등 다양한 주제를 다룹니다.\nR의 또 다른 장점은 대규모 데이터셋을 처리할 수 있다는 점입니다. R에는 데이터베이스, 스프레드시트, 텍스트 파일 등 다양한 소스에서 데이터를 읽고 조작할 수 있는 다양한 패키지가 있습니다. 또한 데이터 재구성, 데이터 세트 병합, 데이터 집계와 같은 강력한 데이터 조작 기능도 갖추고 있습니다.\nR은 학계와 산업계, 특히 금융, 의료, 마케팅과 같은 분야에서 널리 사용됩니다. 학계에서는 통계학, 경제학, 사회과학 등 다양한 분야의 연구와 교육에 R이 사용됩니다. 산업계에서는 기업에서 데이터 분석, 모델링, 시각화 및 데이터 제품 구축에 R을 사용합니다.\n전반적으로 R은 데이터 과학자의 도구 상자에서 중요한 도구이며, 그 인기는 계속 증가하고 있습니다. 데이터 분석, 시각화 및 모델링을 위한 다양한 기능을 제공하며, 사용자와 개발자로 구성된 대규모 커뮤니티가 활발하게 활동하고 있습니다. 데이터 과학에 관심이 있다면 R을 배우는 것을 고려해 볼 가치가 있습니다."
  },
  {
    "objectID": "intro.html#r에서-데이터-랭글링wrangling-및-정리의-기본-개념-소개",
    "href": "intro.html#r에서-데이터-랭글링wrangling-및-정리의-기본-개념-소개",
    "title": "1  R 및 데이터 랭글링 소개",
    "section": "1.2 R에서 데이터 랭글링(Wrangling) 및 정리의 기본 개념 소개",
    "text": "1.2 R에서 데이터 랭글링(Wrangling) 및 정리의 기본 개념 소개\n데이터 랭글링(Wrangling)과 데이터 정제(Cleaning)는 데이터 분석 프로세스에서 중요한 단계입니다. 의미 있는 분석을 수행하려면 데이터가 사용 가능하고 정확한 형식이어야 합니다. R은 데이터 랭글링 및 정제를 위한 다양한 도구와 함수를 제공합니다.\n데이터 랭글링의 첫 번째 단계 중 하나는 데이터를 R로 가져오는 것입니다. R은 CSV 파일, Excel 스프레드시트 및 데이터베이스를 비롯한 다양한 소스에서 데이터를 읽을 수 있습니다. 일반적으로 read.csv() 함수는 CSV 파일에서 읽는 데 사용되며, readxl 패키지의 read_excel() 함수는 Excel 파일에서 읽는 데 사용할 수 있습니다.\n데이터를 R로 가져온 후에는 데이터를 정제해야 할 수 있습니다. 여기에는 결측값 제거, 오류 수정, 이상값 처리 등이 포함될 수 있습니다. na.omit() 함수는 누락된 값이 있는 행을 제거하는 데 사용할 수 있으며, is.na() 함수는 누락된 값을 식별하는 데 사용할 수 있습니다.\n데이터 정제에는 데이터를 더 유용한 형식으로 변환하는 작업도 포함될 수 있습니다. 여기에는 데이터 형식 변경, 데이터셋 병합 또는 데이터 형태변경 등이 포함될 수 있습니다. dplyr 패키지는 select(), filter(), mutate() 등 데이터 조작을 위한 다양한 함수를 제공합니다. tidyr 패키지는 데이터를 와이드(Wide) 형식에서 롱(Long) 형식으로 또는 그 반대로 피벗하는 등 데이터를 재구성하는 데 사용할 수 있습니다.\n데이터 랭글링의 또 다른 중요한 단계는 데이터 탐색입니다. 여기에는 데이터를 시각화하여 패턴, 추세 및 이상값을 식별하는 작업이 포함됩니다. ggplot2 패키지는 R에서 데이터 시각화를 위해 널리 사용되는 패키지로, 산점도, 히스토그램, 상자 그림 등 다양한 플롯을 만들 수 있는 함수를 제공합니다.\n요약하면, 데이터 랭글링과 정리는 데이터 분석 프로세스에서 중요한 단계입니다. R은 데이터 가져오기, 결측치 처리, 데이터 변환, 시각적 데이터 탐색 등의 기능을 포함하여 데이터 랭글링 및 정리를 위한 다양한 도구와 함수를 제공합니다. 이러한 기본 개념을 숙지하면 R에서 의미 있는 데이터 분석을 수행하는 데 큰 도움이 될 것입니다."
  },
  {
    "objectID": "intro.html#r에서-데이터-랭글링을-위한-기술",
    "href": "intro.html#r에서-데이터-랭글링을-위한-기술",
    "title": "1  R 및 데이터 랭글링 소개",
    "section": "1.3 R에서 데이터 랭글링을 위한 기술",
    "text": "1.3 R에서 데이터 랭글링을 위한 기술\n데이터 랭글링은 모든 데이터 과학자에게 필수적인 기술이며, 데이터를 관리하고 정리하는 데 도움이 되는 여러 가지 기술과 도구가 있습니다. 이 섹션에서는 데이터 랭글링을 위한 몇 가지 일반적인 기법을 dplyr 및 tidyr 패키지를 사용하여 살펴보겠습니다.\n\n1.3.1 dplyr로 데이터 필터링하기\ndplyr의 filter() 함수는 하나 이상의 조건에 따라 데이터의 하위 집합을 추출하는 데 사용할 수 있습니다. 예를 들어, ’age’라는 열이 있는 ’mydata’라는 데이터 프레임이 있는 경우 filter() 함수를 사용하여 연령이 30보다 큰 모든 행을 추출할 수 있습니다:\n\nlibrary(dplyr)\nmydata_filtered <- mydata %>%\n  filter(age > 30)\n\n\n\n1.3.2 dplyr로 데이터 정렬하기\ndplyr의 arrange() 함수는 하나 이상의 열을 기준으로 데이터를 정렬하는 데 사용할 수 있습니다. 예를 들어 “name” 및 “age”라는 열이 있는 “mydata”라는 데이터 프레임이 있는 경우 arrange() 함수를 사용하여 데이터 프레임을 이름별로 정렬한 다음 연령별로 정렬할 수 있습니다:\n\nlibrary(dplyr)\nmydata_sorted <- mydata %>%\n  arrange(name, age)\n\n\n\n1.3.3 dplyr로 데이터 병합\n기본 R의 merge() 함수는 하나 이상의 공통 열을 기반으로 두 데이터 프레임을 병합하는 데 사용할 수 있습니다. 그러나 merge() 함수는 더 복잡한 병합에는 사용하기 어려울 수 있습니다. dplyr의 조인 함수(left_join(), right_join(), inner_join(), full_join())는 데이터를 보다 유연하고 직관적으로 병합할 수 있는 방법을 제공합니다. 예를 들어, “id”라는 공통 열이 있는 “df1” 및 “df2”라는 두 개의 데이터 프레임이 있는 경우, left_join() 함수를 사용하여 “id” 열을 기준으로 두 데이터 프레임을 병합할 수 있습니다:\n\nlibrary(dplyr)\nmydata_merged <- left_join(df1, df2, by = \"id\")\n\n\n\n1.3.4 tidyr로 데이터 재구성하기\ntidyr의 피벗 함수(pivot_longer(), pivot_wider())는 데이터를 와이드 형식에서 롱 형식으로 또는 그 반대로 재구성하는 데 사용할 수 있습니다. 예를 들어, 서로 다른 연도의 값을 나타내는 여러 열이 있는 데이터 프레임이 있는 경우 pivot_longer() 함수를 사용하여 연도와 값에 대한 열이 있는 긴 형식으로 데이터의 모양을 변경할 수 있습니다:\n\nlibrary(tidyr)\nmydata_long <- mydata %>%\n  pivot_longer(cols = c(\"year_1\", \"year_2\", \"year_3\"), names_to = \"year\", values_to = \"value\")\n\n\n\n1.3.5 dplyr로 데이터 집계\ndplyr의 summarize() 함수는 하나 이상의 그룹화 변수를 기준으로 데이터를 집계하고 요약 통계를 계산하는 데 사용할 수 있습니다. 예를 들어 “group” 및 “value”라는 열이 있는 “mydata”라는 데이터 프레임이 있는 경우 summarize() 함수를 사용하여 각 그룹에 대한 평균값을 계산할 수 있습니다:\n\nlibrary(dplyr)\nmydata_summarized <- mydata %>%\n  group_by(group) %>%\n  summarize(mean_value = mean(value))\n\n요약하면, dplyr과 tidyr는 R에서 데이터 랭글링을 위한 강력한 패키지입니다. 데이터 필터링, 정렬, 병합, 집계와 같은 기술을 익히면 데이터를 효과적으로 작업하고 정리하는 데 큰 도움이 될 것입니다."
  },
  {
    "objectID": "intro.html#데이터-랭글링을-위한-기술",
    "href": "intro.html#데이터-랭글링을-위한-기술",
    "title": "1  R 및 데이터 랭글링 소개",
    "section": "1.3 데이터 랭글링을 위한 기술",
    "text": "1.3 데이터 랭글링을 위한 기술\n데이터 랭글링은 모든 데이터 과학자에게 필수적인 기술이며, 데이터를 관리하고 정리하는 데 도움이 되는 여러 가지 기술과 도구가 있습니다. 이 섹션에서는 데이터 랭글링을 위한 몇 가지 일반적인 기법을 dplyr 및 tidyr 패키지를 사용하여 살펴보겠습니다.\n\n1.3.1 dplyr로 데이터 필터링\ndplyr의 filter() 함수는 하나 이상의 조건에 따라 데이터의 하위 집합을 추출하는 데 사용할 수 있습니다. 예를 들어, ’age’라는 열이 있는 ’mydata’라는 데이터 프레임이 있는 경우 filter() 함수를 사용하여 연령이 30보다 큰 모든 행을 추출할 수 있습니다:\n\nlibrary(dplyr)\nmydata_filtered <- mydata %>%\n  filter(age > 30)\n\n\n\n1.3.2 dplyr로 데이터 정렬\ndplyr의 arrange() 함수는 하나 이상의 열을 기준으로 데이터를 정렬하는 데 사용할 수 있습니다. 예를 들어 “name” 및 “age”라는 열이 있는 “mydata”라는 데이터 프레임이 있는 경우 arrange() 함수를 사용하여 데이터 프레임을 이름별로 정렬한 다음 연령별로 정렬할 수 있습니다:\n\nlibrary(dplyr)\nmydata_sorted <- mydata %>%\n  arrange(name, age)\n\n\n\n1.3.3 dplyr로 데이터 병합\n기본 R의 merge() 함수는 하나 이상의 공통 열을 기반으로 두 데이터 프레임을 병합하는 데 사용할 수 있습니다. 그러나 merge() 함수는 더 복잡한 병합에는 사용하기 어려울 수 있습니다. dplyr의 조인 함수(left_join(), right_join(), inner_join(), full_join())는 데이터를 보다 유연하고 직관적으로 병합할 수 있는 방법을 제공합니다. 예를 들어, “id”라는 공통 열이 있는 “df1” 및 “df2”라는 두 개의 데이터 프레임이 있는 경우, left_join() 함수를 사용하여 “id” 열을 기준으로 두 데이터 프레임을 병합할 수 있습니다:\n\nlibrary(dplyr)\nmydata_merged <- left_join(df1, df2, by = \"id\")\n\n\n\n1.3.4 tidyr로 데이터 재구성\ntidyr의 피벗 함수(pivot_longer(), pivot_wider())는 데이터를 와이드 형식에서 롱 형식으로 또는 그 반대로 재구성하는 데 사용할 수 있습니다. 예를 들어, 서로 다른 연도의 값을 나타내는 여러 열이 있는 데이터 프레임이 있는 경우 pivot_longer() 함수를 사용하여 연도와 값에 대한 열이 있는 긴 형식으로 데이터의 모양을 변경할 수 있습니다:\n\nlibrary(tidyr)\nmydata_long <- mydata %>%\n  pivot_longer(cols = c(\"year_1\", \"year_2\", \"year_3\"), names_to = \"year\", values_to = \"value\")\n\n\n\n1.3.5 dplyr로 데이터 집계\ndplyr의 summarize() 함수는 하나 이상의 그룹화 변수를 기준으로 데이터를 집계하고 요약 통계를 계산하는 데 사용할 수 있습니다. 예를 들어 “group” 및 “value”라는 열이 있는 “mydata”라는 데이터 프레임이 있는 경우 summarize() 함수를 사용하여 각 그룹에 대한 평균값을 계산할 수 있습니다:\n\nlibrary(dplyr)\nmydata_summarized <- mydata %>%\n  group_by(group) %>%\n  summarize(mean_value = mean(value))\n\n요약하면, dplyr과 tidyr는 R에서 데이터 랭글링을 위한 강력한 패키지입니다. 데이터 필터링, 정렬, 병합, 집계와 같은 기술을 익히면 데이터를 효과적으로 작업하고 정리하는 데 큰 도움이 될 것입니다."
  },
  {
    "objectID": "intro.html#r-자료구조",
    "href": "intro.html#r-자료구조",
    "title": "1  R 및 데이터 랭글링 소개",
    "section": "1.4 R 자료구조",
    "text": "1.4 R 자료구조\nR은 다양한 유형의 데이터로 작업할 수 있는 여러 데이터 구조를 제공하는 데이터 과학을 위한 강력한 언어입니다. 이 섹션에서는 R의 벡터, 행렬, 데이터프레임 및 목록의 기본 개념을 소개합니다.\n\n1.4.1 벡터\n벡터(Vector)는 숫자, 문자 또는 논리와 같은 단일 데이터 유형의 데이터를 담을 수 있는 1차원 배열입니다. c() 함수를 사용하여 벡터를 만들 수 있습니다:\n\nmyvector <- c(1, 2, 3, 4, 5)\n\n벡터에 더하기, 빼기, 곱하기, 나누기 등 다양한 연산을 수행할 수 있습니다. 예를 들어\n\nmyvector * 2\n\n\n\n1.4.2 행렬\n행렬은 숫자, 문자 또는 부울과 같은 단일 데이터 유형의 데이터를 담을 수 있는 2차원 배열입니다. matrix() 함수를 사용하여 행렬을 만들 수 있습니다:\n\nmymatrix <- matrix(1:9, nrow = 3, ncol = 3)\n\n행렬을 더하기, 빼기, 곱하기, 나누기 등 다양한 연산을 행렬에 수행할 수 있습니다. 예를 들어\n\nmymatrix * 2\n\n\n\n1.4.3 데이터프레임\n데이터프레임(dataframe)은 각 열이 다른 데이터 유형(예: 숫자, 문자, 요인)을 가질 수 있는 2차원 테이블과 같은 구조입니다. data.frame() 함수를 사용하여 처음부터 데이터 프레임을 만들거나 R의 다양한 가져오기 함수 중 하나를 사용하여 파일에서 데이터를 가져와서(예: read.csv(), read_excel()) 데이터 프레임을 만들 수 있습니다.\n\nmydata <- data.frame(\n  column1 = c(1, 2, 3),\n  column2 = c(\"value1\", \"value2\", \"value3\")\n)\n\n연산자 $를 사용하거나 [] 연산자를 사용하여 데이터 프레임의 개별 열에 액세스할 수 있습니다:\n\nmydata$column1\n\nmydata[\"column2\"]\n\n\n\n1.4.4 리스트\n리스트(list)는 벡터, 행렬, 데이터프레임 및 기타 리스트와 같은 다양한 유형의 객체 모음입니다. list() 함수를 사용하여 목록을 만들 수 있습니다:\n\nmylist <- list(\n  myvector = c(1, 2, 3, 4, 5),\n  mymatrix = matrix(1:9, nrow = 3, ncol = 3),\n  mydata = data.frame(\n    column1 = c(1, 2, 3),\n    column2 = c(\"value1\", \"value2\", \"value3\")\n  )\n)\n\n연산자 $를 사용하거나 [] 연산자를 사용하여 목록의 개별 개체에 액세스할 수 있습니다:\n\nmylist$myvector\n\nmylist[[1]]\n\n\n\n1.4.5 결론\n이 섹션에서는 벡터, 행렬, 데이터프레임 및 리스트와 같은 R의 데이터 구조에 대한 기본 개념을 소개했습니다. 이러한 데이터 구조와 그 속성을 이해하면 R에서 다양한 유형의 데이터로 작업하는 데 더 나은 준비가 될 것입니다."
  },
  {
    "objectID": "intro.html#연습문제와-프로젝트",
    "href": "intro.html#연습문제와-프로젝트",
    "title": "1  R 및 데이터 랭글링 소개",
    "section": "1.5 연습문제와 프로젝트",
    "text": "1.5 연습문제와 프로젝트\nR에서 데이터 랭글링의 기본 개념을 배운 후에는 이러한 기술을 연습하고 실제 데이터 집합에 적용하는 것이 중요합니다. 다음은 R에서 데이터 랭글링 기술을 연마하는 데 사용할 수 있는 몇 가지 연습 및 프로젝트입니다:\n\n1.5.1 연습문제\n\ndplyr 패키지를 사용하여 하나 이상의 조건으로 데이터 집합을 필터링합니다. 예를 들어, 고객 리뷰 데이터 집합을 필터링하여 평점이 4점 이상인 리뷰만 포함하도록 할 수 있습니다.\ndplyr 패키지를 사용하여 하나 이상의 열을 기준으로 데이터 집합을 정렬합니다. 예를 들어, 판매 데이터의 데이터 집합을 날짜별로 정렬하여 시간 경과에 따른 판매량 변화를 확인할 수 있습니다.\ndplyr 패키지를 사용하여 하나 이상의 열을 기준으로 데이터 집합을 그룹화하고 각 그룹에 대한 요약 통계를 계산합니다. 예를 들어, 고객 주문 데이터 집합을 지역별로 그룹화하여 각 지역의 평균 주문 규모를 계산할 수 있습니다.\ndplyr 패키지를 사용하여 두 개 이상의 데이터 집합을 함께 조인합니다. 예를 들어, 고객 주문 데이터 집합을 고객 인구 통계 데이터 집합과 조인하여 인구 통계와 주문 크기 간에 상관관계가 있는지 확인합니다.\n\n. 데이터 집합을 와이드 포맷에서 롱 포맷으로 또는 롱 포맷에서 와이드 포맷으로 재구성하려면tidyr` 패키지를 사용합니다. 예를 들어, 월별 매출 데이터의 데이터 집합을 와이드 형식(월별 열 하나)에서 롱 형식(월별 행 하나)으로 재구성할 수 있습니다.\n\n\n1.5.2 프로젝트\n\ndplyr 패키지를 사용하여 MovieLens 데이터 집합의 영화 평점 데이터 집합을 분석합니다. 필터링, 정렬, 그룹화, 요약 기능을 사용하여 “역대 최고 평점을 받은 영화는 무엇인가?”, “장르별로 평점이 어떻게 다른가?” 등의 질문에 답할 수 있습니다.\ndplyr 패키지를 사용하여 비행 데이터의 데이터 집합을 분석합니다. 필터링, 정렬, 그룹화, 요약 기능을 사용하여 “미국에서 가장 혼잡한 공항은 어디인가?”, “항공편 지연 시간은 항공사별로 어떻게 다른가?” 등의 질문에 답할 수 있습니다.\ndplyr 패키지를 사용하여 소셜 미디어 게시물의 데이터 집합을 분석합니다. 필터링, 정렬, 그룹화 및 요약 기능을 사용하여 “참여율이 가장 높은 소셜 미디어 플랫폼은 무엇인가요?”, “소셜 미디어에서 가장 많이 논의되는 주제는 무엇인가요?” 등의 질문에 답해 보세요.\n\n이러한 연습과 프로젝트를 연습함으로써 데이터 랭글링 기술을 사용하여 R에서 실제 데이터 집합을 분석하는 귀중한 경험을 쌓을 수 있습니다."
  },
  {
    "objectID": "index.html#작업방식",
    "href": "index.html#작업방식",
    "title": "데이터 사이언스",
    "section": "작업방식",
    "text": "작업방식\nchatGPT 각장의 절을 작성하여 deepl에서 교정 후 quarto book으로 출판한다.\n\n\n\n\n\n\nchatGPT 작성\n\n\n\n\n\nDeepL 번역 및 교정\n\n\n\n\n\n쿼토 출판저작\n\n\n\nFigure 1: chatGPT 디지털 글쓰기 저작 흐름"
  },
  {
    "objectID": "viz_EDA.html#데이터-과학에서-데이터-시각화의-중요성",
    "href": "viz_EDA.html#데이터-과학에서-데이터-시각화의-중요성",
    "title": "2  시각화와 EDA",
    "section": "2.1 데이터 과학에서 데이터 시각화의 중요성",
    "text": "2.1 데이터 과학에서 데이터 시각화의 중요성\n데이터 과학에서 데이터 시각화가 중요한 이유는 여러 가지가 있습니다:\n\n데이터 탐색: 데이터 시각화를 사용하면 데이터를 시각적으로 탐색하고 숫자 표에서 바로 알 수 없는 패턴, 추세 및 이상값을 신속하게 식별할 수 있습니다.\n인사이트 전달: 데이터 시각화를 통해 인사이트와 발견 사항을 명확하고 간결한 방식으로 다른 사람에게 전달할 수 있습니다. 데이터를 시각적으로 제시함으로써 더 많은 사람들이 복잡한 정보에 더 쉽게 접근하고 이해할 수 있도록 만들 수 있습니다.\n모델 검증: 데이터 시각화는 변수 간의 관계를 시각화하고 잠재적인 관심 영역을 식별하여 모델과 가설을 검증하는 데 사용할 수 있습니다.\n의사 결정 안내: 데이터 시각화는 원시 데이터에서 즉시 드러나지 않을 수 있는 추세와 패턴을 식별하는 데 도움이 되는 방식으로 데이터를 제시하여 의사 결정을 안내하는 데 사용할 수 있습니다."
  },
  {
    "objectID": "viz_EDA.html#데이터-시각화의-유형",
    "href": "viz_EDA.html#데이터-시각화의-유형",
    "title": "2  시각화와 EDA",
    "section": "2.2 데이터 시각화의 유형",
    "text": "2.2 데이터 시각화의 유형\n데이터를 표현하는 데 사용할 수 있는 데이터 시각화에는 다음과 같은 다양한 유형이 있습니다:\n\n막대 차트: 카테고리 간 값을 비교하는 데 사용됩니다.\n꺾은선형 차트: 시간 경과에 따른 추세를 표시하거나 여러 변수의 변화를 비교하는 데 사용됩니다.\n산점도 차트: 두 변수 간의 관계를 시각화하는 데 사용됩니다.\n히트맵: 2차원 공간에서 데이터의 밀도를 시각화하는 데 사용됩니다.\n나무트리 맵: 계층형 데이터를 시각화하는 데 사용됩니다.\n네트워크 다이어그램: 엔티티 간의 관계를 시각화하는 데 사용됩니다."
  },
  {
    "objectID": "viz_EDA.html#효과적인-데이터-시각화의-원칙",
    "href": "viz_EDA.html#효과적인-데이터-시각화의-원칙",
    "title": "2  시각화와 EDA",
    "section": "2.3 효과적인 데이터 시각화의 원칙",
    "text": "2.3 효과적인 데이터 시각화의 원칙\n효과적인 데이터 시각화를 만들려면 몇 가지 기본 원칙을 따르는 것이 중요합니다:\n\n단순성: 불필요한 군더더기를 피하여 시각화를 단순하고 읽기 쉽게 유지합니다.\n정확성: 시각화가 왜곡이나 잘못된 표현을 피하면서 데이터를 정확하게 표현하는지 확인합니다.\n관련성: 데이터와 전달하려는 메시지에 적합한 비주얼리제이션 유형을 선택합니다.\n일관성: 여러 시각화에서 일관된 색 구성표, 글꼴 및 기타 시각적 요소를 사용합니다.\n상호 작용: 사용자가 데이터를 더 자세히 탐색할 수 있도록 상호 작용을 제공하세요.\n\n이러한 원칙을 따르고 적절한 데이터 시각화를 사용하면 복잡한 데이터를 이해하고 전달하는 데 도움이 되는 명확하고 효과적인 시각화를 만들 수 있습니다."
  },
  {
    "objectID": "viz_EDA.html#데이터-시각화-중요성",
    "href": "viz_EDA.html#데이터-시각화-중요성",
    "title": "2  시각화와 EDA",
    "section": "2.1 데이터 시각화 중요성",
    "text": "2.1 데이터 시각화 중요성\n데이터 과학에서 데이터 시각화가 중요한 이유는 여러 가지가 있습니다:\n\n데이터 탐색: 데이터 시각화를 사용하면 데이터를 시각적으로 탐색하고 숫자 표에서 바로 알 수 없는 패턴, 추세 및 이상값을 신속하게 식별할 수 있습니다.\n인사이트 전달: 데이터 시각화를 통해 인사이트와 발견 사항을 명확하고 간결한 방식으로 다른 사람에게 전달할 수 있습니다. 데이터를 시각적으로 제시함으로써 더 많은 사람들이 복잡한 정보에 더 쉽게 접근하고 이해할 수 있도록 만들 수 있습니다.\n모델 검증: 데이터 시각화는 변수 간의 관계를 시각화하고 잠재적인 관심 영역을 식별하여 모델과 가설을 검증하는 데 사용할 수 있습니다.\n의사 결정 안내: 데이터 시각화는 원시 데이터에서 즉시 드러나지 않을 수 있는 추세와 패턴을 식별하는 데 도움이 되는 방식으로 데이터를 제시하여 의사 결정을 안내하는 데 사용할 수 있습니다."
  },
  {
    "objectID": "viz_EDA.html#데이터-시각화-유형",
    "href": "viz_EDA.html#데이터-시각화-유형",
    "title": "2  시각화와 EDA",
    "section": "2.2 데이터 시각화 유형",
    "text": "2.2 데이터 시각화 유형\n데이터를 표현하는 데 사용할 수 있는 데이터 시각화에는 다음과 같은 다양한 유형이 있습니다:\n\n막대 차트: 카테고리 간 값을 비교하는 데 사용됩니다.\n꺾은선형 차트: 시간 경과에 따른 추세를 표시하거나 여러 변수의 변화를 비교하는 데 사용됩니다.\n산점도 차트: 두 변수 간의 관계를 시각화하는 데 사용됩니다.\n히트맵: 2차원 공간에서 데이터의 밀도를 시각화하는 데 사용됩니다.\n나무트리 맵: 계층형 데이터를 시각화하는 데 사용됩니다.\n네트워크 다이어그램: 엔티티 간의 관계를 시각화하는 데 사용됩니다."
  },
  {
    "objectID": "viz_EDA.html#효과적인-시각화-원칙",
    "href": "viz_EDA.html#효과적인-시각화-원칙",
    "title": "2  시각화와 EDA",
    "section": "2.3 효과적인 시각화 원칙",
    "text": "2.3 효과적인 시각화 원칙\n효과적인 데이터 시각화를 만들려면 몇 가지 기본 원칙을 따르는 것이 중요합니다:\n\n단순성: 불필요한 군더더기를 피하여 시각화를 단순하고 읽기 쉽게 유지합니다.\n정확성: 시각화가 왜곡이나 잘못된 표현을 피하면서 데이터를 정확하게 표현하는지 확인합니다.\n관련성: 데이터와 전달하려는 메시지에 적합한 비주얼리제이션 유형을 선택합니다.\n일관성: 여러 시각화에서 일관된 색 구성표, 글꼴 및 기타 시각적 요소를 사용합니다.\n상호 작용: 사용자가 데이터를 더 자세히 탐색할 수 있도록 상호 작용을 제공하세요.\n\n이러한 원칙을 따르고 적절한 데이터 시각화를 사용하면 복잡한 데이터를 이해하고 전달하는 데 도움이 되는 명확하고 효과적인 시각화를 만들 수 있습니다."
  },
  {
    "objectID": "viz_EDA.html#데이터-시각화와-중요성",
    "href": "viz_EDA.html#데이터-시각화와-중요성",
    "title": "2  시각화와 EDA",
    "section": "2.1 데이터 시각화와 중요성",
    "text": "2.1 데이터 시각화와 중요성\n데이터 과학에서 데이터 시각화가 중요한 이유는 여러 가지가 있습니다:\n\n데이터 탐색: 데이터 시각화를 사용하면 데이터를 시각적으로 탐색하고 숫자 표에서 바로 알 수 없는 패턴, 추세 및 이상값을 신속하게 식별할 수 있습니다.\n인사이트 전달: 데이터 시각화를 통해 인사이트와 발견 사항을 명확하고 간결한 방식으로 다른 사람에게 전달할 수 있습니다. 데이터를 시각적으로 제시함으로써 더 많은 사람들이 복잡한 정보에 더 쉽게 접근하고 이해할 수 있도록 만들 수 있습니다.\n모델 검증: 데이터 시각화는 변수 간의 관계를 시각화하고 잠재적인 관심 영역을 식별하여 모델과 가설을 검증하는 데 사용할 수 있습니다.\n의사 결정 안내: 데이터 시각화는 원시 데이터에서 즉시 드러나지 않을 수 있는 추세와 패턴을 식별하는 데 도움이 되는 방식으로 데이터를 제시하여 의사 결정을 안내하는 데 사용할 수 있습니다.\n\n\n2.1.1 데이터 시각화 유형\n데이터를 표현하는 데 사용할 수 있는 데이터 시각화에는 다음과 같은 다양한 유형이 있습니다:\n\n막대 차트: 카테고리 간 값을 비교하는 데 사용됩니다.\n꺾은선형 차트: 시간 경과에 따른 추세를 표시하거나 여러 변수의 변화를 비교하는 데 사용됩니다.\n산점도 차트: 두 변수 간의 관계를 시각화하는 데 사용됩니다.\n히트맵: 2차원 공간에서 데이터의 밀도를 시각화하는 데 사용됩니다.\n나무트리 맵: 계층형 데이터를 시각화하는 데 사용됩니다.\n네트워크 다이어그램: 엔티티 간의 관계를 시각화하는 데 사용됩니다.\n\n\n\n2.1.2 효과적인 시각화 원칙\n효과적인 데이터 시각화를 만들려면 몇 가지 기본 원칙을 따르는 것이 중요합니다:\n\n단순성: 불필요한 군더더기를 피하여 시각화를 단순하고 읽기 쉽게 유지합니다.\n정확성: 시각화가 왜곡이나 잘못된 표현을 피하면서 데이터를 정확하게 표현하는지 확인합니다.\n관련성: 데이터와 전달하려는 메시지에 적합한 시각화 유형을 선택합니다.\n일관성: 여러 시각화에서 일관된 색 구성표, 글꼴 및 기타 시각적 요소를 사용합니다.\n상호 작용: 사용자가 데이터를 더 자세히 탐색할 수 있도록 상호 작용을 제공하세요.\n\n이러한 원칙을 따르고 적절한 데이터 시각화를 사용하면 복잡한 데이터를 이해하고 전달하는 데 도움이 되는 명확하고 효과적인 시각화를 만들 수 있습니다."
  },
  {
    "objectID": "viz_EDA.html#시각화-도구---ggplot2",
    "href": "viz_EDA.html#시각화-도구---ggplot2",
    "title": "2  시각화와 EDA",
    "section": "2.2 시각화 도구 - ggplot2",
    "text": "2.2 시각화 도구 - ggplot2\nR은 데이터 시각화를 만들기 위한 다양한 패키지를 제공하지만, 가장 인기 있고 강력한 두 가지 패키지는 ggplot2입니다. 이 패키지를 사용하면 산점도 차트, 꺾은선형 차트, 막대 차트 등 다양한 고품질의 사용자 지정 가능한 시각화를 만들 수 있습니다.\n\n2.2.1 ggplot2\nggplot2는 그래픽 문법을 사용하여 우아하고 사용자 지정 가능한 데이터 시각화를 만들기 위한 패키지입니다. 모든 시각화는 기하학적 도형, 눈금, 좌표계와 같은 선언적 구성 요소 집합으로 분해할 수 있다는 아이디어를 기반으로 합니다. 이러한 빌딩 블록을 다양한 방식으로 결합하여 사용자는 다양하고 복잡한 시각화를 만들 수 있습니다.\nggplot2의 몇 가지 기능은 다음과 같습니다:\n\n레이어링(Layering): 점, 선, 레이블 등 다양한 요소를 레이어링하여 복잡한 시각화를 만들 수 있습니다.\n테마(Themes): 글꼴, 색상 및 배경을 변경하여 시각화의 모양을 사용자 지정할 수 있는 기능입니다.\n패싯(Faceting): 데이터의 서로 다른 하위 집합을 기반으로 여러 개의 작은 시각화를 만드는 기능입니다.\n\n\n\n2.2.2 올바른 패키지 선택\nggplot2 및 다양한 시각화 패키지는 모두 R에서 데이터 시각화를 만들기 위한 강력한 패키지입니다. 올바른 패키지를 선택하는 것은 프로젝트의 특정 요구 사항에 따라 달라집니다. 고도의 사용자 지정이 필요한 복잡한 시각화를 만드는 데 관심이 있는 경우 ggplot2가 더 나은 선택일 수 있습니다.\n어떤 패키지를 선택하든 효과적인 데이터 시각화의 원칙을 잘 이해하고 명확하고 효과적인 시각화를 만들기 위한 모범 사례를 따르는 것이 중요합니다.\n\n\n2.2.3 EDA 원칙\n탐색적 데이터 분석(EDA)은 데이터셋을 분석하고 이해하여 주요 특성을 요약하는 과정으로, 주로 시각적 방법을 사용합니다. EDA는 데이터 과학자가 데이터 내부의 패턴과 관계를 더 잘 이해하고 이상값이나 결측값과 같은 잠재적인 문제를 식별하는 데 도움이 됩니다.\n\n\n2.2.4 데이터 분포\n데이터 분포는 데이터셋의 값이 어떻게 펴져있는지를 나타냅니다. 데이터 분포를 이해하는 것은 데이터를 분석하는 데 사용되는 통계 방법의 선택에 영향을 미칠 수 있으므로 중요합니다. 데이터 분포를 시각화하는 데 가장 일반적으로 사용되는 방법에는 히스토그램, 밀도 플롯, 상자그림 플롯이 있습니다.\n히스토그램은 데이터를 구간으로 나누고 각 구간에 있는 데이터 수를 세어 연속 데이터의 분포를 시각화하는 방법을 제공합니다. 밀도 플롯은 비슷한 시각화를 제공하지만 데이터의 확률 밀도 함수를 추정합니다. 상자그림 플롯은 데이터의 중앙값, 사분위수 및 이상값을 표시하여 분포를 시각화합니다.\n\n\n2.2.5 상관 관계\n상관관계는 두 변수 간의 관계의 강도와 방향을 측정하는 척도입니다. 상관관계 분석은 데이터 내의 패턴과 관계를 식별하는 데 유용합니다. 상관 관계를 시각화하는 데 가장 일반적으로 사용되는 방법은 산점도입니다.\n산점도에서 각 점은 두 변수의 값 쌍을 나타냅니다. 점을 2차원 평면에 그려서 두 변수 간의 관계를 시각적으로 검사할 수 있습니다. 양의 상관관계는 한 변수가 증가하면 다른 변수도 증가한다는 것을 의미하며, 음의 상관관계는 한 변수가 증가하면 다른 변수가 감소한다는 것을 의미합니다.\n\n\n2.2.6 이상값 감지\n이상값은 데이터셋의 다른 점들과 크게 다른 데이터 점입니다. 이상값은 통계 분석에 큰 영향을 미칠 수 있으므로 이상값을 식별하고 제거할지 여부를 결정하는 것이 중요합니다. 이상값을 시각화하는 데 가장 일반적으로 사용되는 방법은 상자그림 플롯입니다.\n상자그림 플롯에서 이상값은 플롯의 수염을 벗어난 데이터 포인트로 식별됩니다. 이상값을 감지하는 또 다른 방법은 Z-점수 검정 또는 투키(Tukey) 방법과 같은 통계적 테스트를 사용하는 것입니다.\n\n\n2.2.7 결론\n탐색적 데이터 분석은 모든 데이터 과학 프로젝트에서 중요한 단계입니다. 데이터 과학자는 데이터 분포, 변수 간의 상관관계, 이상값의 존재를 이해함으로써 데이터에 대한 인사이트를 얻고 데이터 분석 방법에 대해 정보에 입각한 결정을 내릴 수 있습니다. 효과적인 EDA를 위해서는 시각화 및 통계적 방법의 조합과 데이터 분석의 기본 원칙에 대한 충분한 이해가 필요합니다."
  },
  {
    "objectID": "viz_EDA.html#데이터-탐색-기법",
    "href": "viz_EDA.html#데이터-탐색-기법",
    "title": "2  시각화와 EDA",
    "section": "2.3 데이터 탐색 기법",
    "text": "2.3 데이터 탐색 기법\n데이터 탐색은 데이터셋의 주요 특성을 분석하고 시각화하여 그 기본 패턴과 관계를 이해하는 프로세스입니다. 다음은 데이터 과학에서 데이터 탐색에 가장 일반적으로 사용되는 몇 가지 기술입니다.\n\n2.3.1 산점도\n산점도(Scatter Plot)는 두 변수 간의 관계를 탐색하는 데 유용한 기법입니다. 산점도에서 각 점은 비교 대상인 두 변수의 값 쌍을 나타냅니다. X축은 한 변수를 나타내고 Y축은 다른 변수를 나타냅니다. 2차원 평면에 점을 그리면 두 변수 간의 관계를 시각적으로 확인할 수 있습니다.\n예를 들어 한 사람의 나이와 소득 간의 관계를 살펴보고 싶다고 가정해 보겠습니다. 나이를 X축으로 하고 소득을 Y축으로 하는 산점도를 만들 수 있습니다. 산점도를 살펴보면 나이와 소득 사이에 양의 상관관계가 있는지 또는 음의 상관관계가 있는지 확인할 수 있습니다.\n\n\n2.3.2 히스토그램\n히스토그램은 단일 변수의 분포를 시각화하는 방법을 제공합니다. 히스토그램에서 데이터는 구간 또는 구간차원으로 나뉘며, 각 구간차원에 있는 데이터 요소의 수를 계산합니다. 결과 시각화는 각 구간차원 내의 데이터 요소의 빈도를 보여줍니다.\n예를 들어, 데이터셋의 연령 분포를 탐색하고 싶다고 가정해 보겠습니다. X축에 연령을, Y축에 연령 값의 빈도를 포함하는 히스토그램을 만들 수 있습니다. 히스토그램을 검토하여 연령 값이 왼쪽이나 오른쪽으로 치우쳐 있는지 또는 고르게 분포되어 있는지 확인할 수 있습니다.\n\n\n2.3.3 상자그림\n상자그림(Boxplot)은 단일 변수의 분포를 시각화하고 이상값을 식별할 수 있는 방법을 제공합니다. 상자그림에서는 데이터를 사 분위수로 나누고 중앙값, 1사분위수 및 3사분위수, 특정 범위 내의 최소값과 최대값을 표시하는 상자를 그립니다. 이상값은 상자그림의 수염을 벗어난 데이터 포인트로 식별됩니다.\n예를 들어 데이터셋의 소득 분포를 탐색하고 싶다고 가정해 보겠습니다. Y축에 소득 값이 있는 상자그림을 만들 수 있습니다. 상자그림을 검토하여 소득 값에 이상값이 있는지 확인할 수 있습니다.\n\n\n2.3.4 결론\n데이터 탐색은 데이터 과학 프로세스에서 중요한 단계입니다. 데이터 과학자는 산점도, 히스토그램, 상자그림과 같은 기법을 사용하여 데이터셋 내의 패턴과 관계에 대한 인사이트를 얻을 수 있습니다. 이러한 기법은 이상값을 식별하고, 변수 분포를 탐색하고, 데이터의 잠재적인 문제를 식별하는 데 사용할 수 있습니다. 궁극적으로 효과적인 데이터 탐색은 데이터를 분석하고 모델링하는 방법에 대해 정보에 입각한 결정을 내리는 데 핵심적인 역할을 합니다."
  },
  {
    "objectID": "viz_EDA.html#연습문제와-프로젝트",
    "href": "viz_EDA.html#연습문제와-프로젝트",
    "title": "2  시각화와 EDA",
    "section": "2.4 연습문제와 프로젝트",
    "text": "2.4 연습문제와 프로젝트\n연습과 프로젝트는 모든 학습 과정에서 매우 중요한 부분이며, 데이터 시각화 및 탐색적 데이터 분석(EDA)도 예외는 아닙니다. 이 섹션에서는 R을 사용하여 데이터 시각화 및 EDA 기술을 연습하는 데 도움이 되는 몇 가지 연습과 프로젝트를 소개합니다.\n\n2.4.1 연습문제\n\nmtcars 데이터셋을 가져와서 마력(hp)에 대한 갤런당 마일(mpg)의 산점도를 만듭니다. 실린더(실린더) 수에 따라 다른 색상을 사용합니다.\n붓꽃(iris) 데이터셋을 가져와서 각 종(Species)에 대한 꽃받침 길이(Sepal.Length)의 히스토그램을 만듭니다. 종마다 다른 색상을 사용합니다.\nggplot2 패키지에서 다이아몬드(diamonds) 데이터셋을 가져와서 각 컷(cut)에 대한 가격(price)의 상자그림을 만듭니다. 컷마다 다른 색상을 사용합니다.\nmtcars 데이터셋을 가져와서, 무게(wt)에 대한 갤런당 마일(mpg)의 산점도를 만듭니다. 플롯에 회귀선을 추가합니다.\ngapminder 패키지에서 gapminder 데이터을 가져와서, 2007년에 대한 기대 수명(lifeExp)과 1인당 GDP(gdpPercap)의 산점도를 만듭니다. 대륙(continent)에 따라 다른 색상을 사용합니다.\n\n\n\n2.4.2 프로젝트\n\nggplot2 패키지를 사용하여 데이터 시각화 프로젝트를 만듭니다. 관심 있는 데이터셋을 선택하고 데이터의 다양한 측면을 탐색하는 일련의 플롯을 만듭니다. 프로젝트에는 산점도, 히스토그램, 상자그림이 하나 이상 포함되어야 합니다.\n시계열 데이터(예: 주가 또는 날씨 데이터)가 포함된 데이터셋을 선택하고 시간에 따른 데이터의 다양한 측면을 탐색하는 일련의 플롯을 만듭니다. 프로젝트에는 꺾은선형 차트, 산점도, 히스토그램이 하나 이상 포함되어야 합니다.\ntidyverse 패키지를 사용해 EDA 프로젝트를 만듭니다. 관심 있는 데이터셋을 선택하고 다양한 EDA 기법을 사용하여 데이터의 다양한 측면을 탐색합니다. 프로젝트에는 데이터 분포 시각화, 여러 변수 간의 관계 시각화, 이상값 시각화 중 하나 이상이 포함되어야 합니다.\n공간 데이터(예: 인구 밀도 맵 또는 지진 위치 맵)가 포함된 데이터셋을 선택하고 데이터의 다양한 측면을 탐색하는 일련의 플롯을 만듭니다. 프로젝트에는 적어도 하나의 맵, 하나의 분산형 차트, 하나의 히스토그램이 포함되어야 합니다.\n네트워크 데이터가 포함된 데이터셋(예: 소셜 네트워크 또는 교통 네트워크)을 선택하고 데이터의 다양한 측면을 탐색하는 일련의 플롯을 만듭니다. 프로젝트에는 네트워크 다이어그램, 분산형 차트, 히스토그램이 하나 이상 포함되어야 합니다.\n\n이러한 연습과 프로젝트를 연습하면 R의 데이터 시각화 및 EDA 기술에 더 익숙해지고, 이러한 기술을 사용하여 데이터에서 인사이트를 얻는 방법을 더 잘 이해할 수 있습니다."
  }
]